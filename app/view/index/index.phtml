<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>IM</title>
    <link rel="stylesheet" href="/layui/css/layui.css">
    <style>
        html{background-color: #333;}
    </style>
</head>
<body>
<script src="/layui/layui.js"></script>
<script src="/js/jquery.min.js"></script>
<script src="/js/reconnecting-websocket.min.js"></script>
<script>
    let sessionId = '<?=$sessionId?>';
    layui.use('layim', function(layim){
        let socket = new ReconnectingWebSocket('<?=$ws?>', null, {debug:true,reconnectInterval:1000});
        //连接成功时触发
        socket.onopen = function(){
            socket.send(JSON.stringify({
                action: 'open',
                data: {
                    sessionId: sessionId
                }
            }));

            $.ajax({
                url: '/aj/getMessage',
                method: 'get',
                success: function(res) {
                    if ($.isArray(res.data)) {
                        $.each(res.data, function(i, row) {
                            getMessage(row);
                        });
                        $.ajax({
                            url: '/aj/clearAllUnpushed',
                            method: 'get',
                            success: function(res) {},
                            error: function(res) {}
                        });
                    }
                },
                error: function(res) {
                    console.log(res);
                }
            });
        };

        function getMessage(data) {
            let obj = {};
            if (data.type === 'group') {
                obj = {
                    username: data.from_username
                    ,avatar: data.avatar
                    ,id: data.group_id
                    ,type: data.type
                    ,content: data.content
                    ,timestamp: data.message_time * 1000
                }
            } else {
                obj = {
                    username: data.from_username
                    ,avatar: data.avatar
                    ,id: data.from_id
                    ,type: data.type
                    ,content: data.content
                    ,timestamp: data.message_time * 1000
                };
                layim.setChatStatus('<span style="color:#FF5722;">在线</span>');
            }
            console.log(obj);
            layim.getMessage(obj);
        }

        //监听收到的消息
        socket.onmessage = function(res){
            let data = JSON.parse(res.data);
            switch (data.action) {
                case 'chat':
                    getMessage(data);
                    break;
                case 'friend_online_status':
                    console.log(data);
                    break;
                case 'login':
                    window.location.href = '/login';
            }
        };

        socket.onclose = function() {

        };

        //基础配置
        layim.config({

            //初始化接口
            init: {
                url: '/aj/getList'
                ,data: {}
            }

            //查看群员接口
            ,members: {
                url: '/aj/getMembers'
                ,data: {}
            }

            //上传图片接口
            ,uploadImage: {
                url: '/aj/upload/image' //（返回的数据格式见下文）
                ,type: 'post' //默认post
            }

            //上传文件接口
            ,uploadFile: {
                url: '/aj/upload/file' //（返回的数据格式见下文）
                ,type: 'post' //默认post
            }

            //扩展工具栏
            ,tool: [{
                alias: 'code'
                ,title: '代码'
                ,icon: '&#xe64e;'
            }]

            ,title: 'WebIM' //自定义主面板最小化时的标题
            //,right: '100px' //主面板相对浏览器右侧距离
            //,minRight: '90px' //聊天面板最小化时相对浏览器右侧距离
            ,initSkin: '5.jpg' //1-5 设置初始背景
            //,skin: ['aaa.jpg'] //新增皮肤
            ,isfriend: true //是否开启好友
            ,isgroup: true //是否开启群组
            //,min: true //是否始终最小化主面板，默认false
            ,notice: true //是否开启桌面消息提醒，默认false
            ,voice: 'default.wav' //声音提醒，默认开启，声音文件为：default.wav

            ,msgbox: layui.cache.dir + 'css/modules/layim/html/msgbox.html' //消息盒子页面地址，若不开启，剔除该项即可
            ,find: layui.cache.dir + 'css/modules/layim/html/find.html' //发现页面地址，若不开启，剔除该项即可
            ,chatLog: layui.cache.dir + 'css/modules/layim/html/chatLog.html' //聊天记录页面地址，若不开启，剔除该项即可

        });

        //监听在线状态的切换事件
        layim.on('online', function(data){
            $.ajax({
                url: '/aj/changeMyStatus',
                method: 'post',
                data: {
                    'status': data
                },
                success: function(res) {
                    console.log(res);
                },
                error: function(res) {
                    console.log(res);
                }
            });
        });

        //监听签名修改
        layim.on('sign', function(value){
            $.ajax({
                url: '/aj/changeSign',
                method: 'post',
                data: {
                    sign: value
                },
                success: function(res) {},
                error: function(res) {}
            });
        });

        //监听自定义工具栏点击，以添加代码为例
        layim.on('tool(code)', function(insert){
            layer.prompt({
                title: '插入代码'
                ,formType: 2
                ,shade: 0
            }, function(text, index){
                layer.close(index);
                insert('[pre class=layui-code]' + text + '[/pre]'); //将内容插入到编辑器
            });
        });

        //监听layim建立就绪
        layim.on('ready', function(res){
            //layim.msgbox(5); //模拟消息盒子有新消息，实际使用时，一般是动态获得
        });

        //监听发送消息
        layim.on('sendMessage', function(data){
            let To = data.to;
            data.sessionId = sessionId;
            console.log(data);
            socket.send(JSON.stringify({action: 'chat', data: data}));
        });

        //监听查看群员
        layim.on('members', function(data){

        });

        //监听聊天窗口的切换
        layim.on('chatChange', function(res){
            let type = res.data.type;
            $.ajax({
                url: '/aj/getUserStatus',
                method: 'get',
                data: {
                    id: res.data.id
                },
                success: function(res) {
                    if (res.data === 'online') {
                        if ('friend' === type) {
                            layim.setChatStatus('<span style="color:#FF5722;">在线</span>');
                        }
                    } else {
                        if ('friend' === type) {
                            layim.setChatStatus('<span style="color:#555;">离线</span>');
                        }
                    }
                },
                error: function(res) {
                    console.log(res);
                }
            });
        });
    });
</script>
</body>
</html>
