#!/usr/bin/env php
<?php

use lib\log\Logger;
use lib\storage\Redis;

define('APP_PATH', realpath(__DIR__ . '/../') . '/');
$config = require APP_PATH . 'vendor/autoload.php';

spl_autoload_register(function ($className) use ($config) {
    $classPath = $config['app_directory'] . str_replace('\\', DIRECTORY_SEPARATOR, $className) . '.php';
    require $classPath;
}, true);

$config = require APP_PATH . 'conf/config.php';
$wsConfig = $config['ws_server'];
new linger\framework\Application($config);

$server = new swoole\websocket\Server($wsConfig['host'], $wsConfig['port']);

$server->on('open', function (swoole\websocket\Server $server, $request) {
    echo "server: handshake success with fd{$request->fd}\n";

});

$server->on('message', function (swoole\websocket\Server $server, $frame) {
    echo "receive from {$frame->fd}:{$frame->data},opcode:{$frame->opcode},fin:{$frame->finish}\n";
    $data = json_decode($frame->data, true);
    switch ($data['action']) {
        case 'open':
            $userId = $data['data']['userId'];
            $redis = Redis::instance('queue');
            $redis->set($userId, $frame->fd);
            $redis->close();
            //更新在线状态
            break;
        case 'chat':
            $redis = Redis::instance('queue');
            $toFd = $redis->get($data['data']['to']['id']);
            $redis->close();
            $server->push($toFd, json_encode([
                'type'     => $data['data']['to']['type'],
                'userId'   => $data['data']['mine']['id'],
                'userName' => $data['data']['mine']['username'],
                'avatar'   => $data['data']['mine']['avatar'],
                'content'  => $data['data']['mine']['content'],
            ]));
            break;
    }
});

$server->on('close', function ($ser, $fd) use ($server) {
    echo "client {$fd} closed\n";

    $server->push($fd, "用户下线");
});

$server->start();